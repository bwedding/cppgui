// DatabaseInterfaces.idl
import "oaidl.idl";
import "ocidl.idl";

[
    uuid(5bdb4673-7c79-40ec-9a48-7988b38ce7c5),
        version(1.0),
]
library DatabaseInterfaces
{
    importlib("stdole2.tlb");

    // Interface for database operations
    [
        object,
            uuid(55c7ffa0-894d-4a5b-9fa9-166fe9e4a355),
            dual,
            nonextensible,
            helpstring("Interface for database operations"),
            pointer_default(unique)
    ]
        interface INativeDatabaseAccess : IDispatch
    {
        // Connection management
        [id(1)] HRESULT OpenConnection([in] BSTR connectionString, [out, retval] BOOL* success);
        [id(2)] HRESULT CloseConnection([in] BSTR connectionString, [out, retval] BOOL* success);
        [id(3)] HRESULT GetConnectionStatus([in] BSTR connectionString, [out, retval] BOOL* isConnected);

        // Query execution
        [id(4)] HRESULT ExecuteQuery([in] BSTR connectionString, [in] BSTR query, [out, retval] BSTR* pVarResult);
        [id(5)] HRESULT ExecuteNonQuery([in] BSTR connectionString, [in] BSTR query, [out, retval] LONG* rowsAffected);

        // Transaction management
        [id(6)] HRESULT BeginTransaction([in] BSTR connectionString, [out, retval] BOOL* success);
        [id(7)] HRESULT CommitTransaction([in] BSTR connectionString, [out, retval] BOOL* success);
        [id(8)] HRESULT RollbackTransaction([in] BSTR connectionString, [out, retval] BOOL* success);

        // Parameter binding
        [id(9)] HRESULT CreateParameterizedQuery([in] BSTR query, [out, retval] BSTR* queryId);
        [id(10)] HRESULT AddParameter([in] BSTR queryId, [in] BSTR paramName, [in] VARIANT paramValue);
        [id(11)] HRESULT ExecuteParameterizedQuery([in] BSTR connectionString, [in] BSTR queryId, [out, retval] BSTR* pVarResult);
        [id(12)] HRESULT ExecuteParameterizedNonQuery([in] BSTR connectionString, [in] BSTR queryId, [out, retval] LONG* rowsAffected);
    };
}
